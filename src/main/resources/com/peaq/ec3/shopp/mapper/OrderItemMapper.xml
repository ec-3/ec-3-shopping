<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peaq.ec3.shopp.mapper.OrderItemMapper">
    <resultMap id="BaseResultMap" type="com.peaq.ec3.shopp.model.OrderItem">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="product_num" jdbcType="VARCHAR" property="productNum"/>
        <result column="master_pic" jdbcType="VARCHAR" property="masterPic"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="equity_price" jdbcType="BIGINT" property="equityPrice"/>
        <result column="cost_price" jdbcType="BIGINT" property="costPrice"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, order_id, product_num, master_pic, product_name, quantity, price, equity_price, 
    cost_price, `type`, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.peaq.ec3.shopp.model.OrderItem">
    insert into order_item (id, user_id, order_id, 
      product_num, master_pic, product_name, 
      quantity, price, equity_price, 
      cost_price, `type`, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{productNum,jdbcType=VARCHAR}, #{masterPic,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{price,jdbcType=BIGINT}, #{equityPrice,jdbcType=BIGINT}, 
      #{costPrice,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.peaq.ec3.shopp.model.OrderItem">
        insert into order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="productNum != null">
                product_num,
            </if>
            <if test="masterPic != null">
                master_pic,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="equityPrice != null">
                equity_price,
            </if>
            <if test="costPrice != null">
                cost_price,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productNum != null">
                #{productNum,jdbcType=VARCHAR},
            </if>
            <if test="masterPic != null">
                #{masterPic,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=BIGINT},
            </if>
            <if test="equityPrice != null">
                #{equityPrice,jdbcType=BIGINT},
            </if>
            <if test="costPrice != null">
                #{costPrice,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.peaq.ec3.shopp.model.OrderItem">
        update order_item
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productNum != null">
                product_num = #{productNum,jdbcType=VARCHAR},
            </if>
            <if test="masterPic != null">
                master_pic = #{masterPic,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=BIGINT},
            </if>
            <if test="equityPrice != null">
                equity_price = #{equityPrice,jdbcType=BIGINT},
            </if>
            <if test="costPrice != null">
                cost_price = #{costPrice,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.peaq.ec3.shopp.model.OrderItem">
    update order_item
    set user_id = #{userId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      product_num = #{productNum,jdbcType=VARCHAR},
      master_pic = #{masterPic,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      equity_price = #{equityPrice,jdbcType=BIGINT},
      cost_price = #{costPrice,jdbcType=BIGINT},
      `type` = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getOrderItemList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        <where>
            <if test="userId != null and userId!=''">
                user_id = #{userId} and
            </if>
            <if test="orderId != null and orderId!=''">
                order_id = #{orderId}
            </if>
        </where>
    </select>
</mapper>