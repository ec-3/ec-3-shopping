<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peaq.ec3.shopp.mapper.CoinNetworkMapper">
  <resultMap id="BaseResultMap" type="com.peaq.ec3.shopp.model.CoinNetwork">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="coin_id" jdbcType="BIGINT" property="coinId" />
    <result column="net_id" jdbcType="BIGINT" property="netId" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, coin_id, net_id, `enable`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from coin_network
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from coin_network
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.peaq.ec3.shopp.model.CoinNetwork">
    insert into coin_network (id, coin_id, net_id,
      `enable`, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{coinId,jdbcType=BIGINT}, #{netId,jdbcType=BIGINT},
      #{enable,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.peaq.ec3.shopp.model.CoinNetwork">
    insert into coin_network
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coinId != null">
        coin_id,
      </if>
      <if test="netId != null">
        net_id,
      </if>
      <if test="enable != null">
        `enable`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="coinId != null">
        #{coinId,jdbcType=BIGINT},
      </if>
      <if test="netId != null">
        #{netId,jdbcType=BIGINT},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.peaq.ec3.shopp.model.CoinNetwork">
    update coin_network
    <set>
      <if test="coinId != null">
        coin_id = #{coinId,jdbcType=BIGINT},
      </if>
      <if test="netId != null">
        net_id = #{netId,jdbcType=BIGINT},
      </if>
      <if test="enable != null">
        `enable` = #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peaq.ec3.shopp.model.CoinNetwork">
    update coin_network
    set coin_id = #{coinId,jdbcType=BIGINT},
      net_id = #{netId,jdbcType=BIGINT},
      `enable` = #{enable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="batchByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from coin_network
    where coin_id in (
    <foreach collection="ids" index="index" item="id" separator=",">
      #{id}
    </foreach>
    )
  </select>
</mapper>