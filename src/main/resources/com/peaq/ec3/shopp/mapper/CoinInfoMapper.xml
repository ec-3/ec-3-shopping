<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peaq.ec3.shopp.mapper.CoinInfoMapper">
    <resultMap id="BaseResultMap" type="com.peaq.ec3.shopp.model.CoinInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="currency_full_name" jdbcType="VARCHAR" property="currencyFullName"/>
        <result column="price" jdbcType="VARCHAR" property="price"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
        <result column="company_url" jdbcType="VARCHAR" property="companyUrl"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="market_type" jdbcType="BIT" property="marketType"/>
        <result column="scale" jdbcType="VARCHAR" property="scale"/>
        <result column="enable" jdbcType="BIT" property="enable"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, currency, currency_full_name, price, icon, company, company_url, sort, market_type, 
    `scale`, `enable`, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coin_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from coin_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.peaq.ec3.shopp.model.CoinInfo">
    insert into coin_info (id, currency, currency_full_name, 
      price, icon, company, 
      company_url, sort, market_type, 
      `scale`, `enable`, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{currency,jdbcType=VARCHAR}, #{currencyFullName,jdbcType=VARCHAR}, 
      #{price,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{companyUrl,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{marketType,jdbcType=BIT}, 
      #{scale,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.peaq.ec3.shopp.model.CoinInfo">
        insert into coin_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="currency != null">
                currency,
            </if>
            <if test="currencyFullName != null">
                currency_full_name,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="companyUrl != null">
                company_url,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="marketType != null">
                market_type,
            </if>
            <if test="scale != null">
                `scale`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="currency != null">
                #{currency,jdbcType=VARCHAR},
            </if>
            <if test="currencyFullName != null">
                #{currencyFullName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="companyUrl != null">
                #{companyUrl,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="marketType != null">
                #{marketType,jdbcType=BIT},
            </if>
            <if test="scale != null">
                #{scale,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.peaq.ec3.shopp.model.CoinInfo">
        update coin_info
        <set>
            <if test="currency != null">
                currency = #{currency,jdbcType=VARCHAR},
            </if>
            <if test="currencyFullName != null">
                currency_full_name = #{currencyFullName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="companyUrl != null">
                company_url = #{companyUrl,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="marketType != null">
                market_type = #{marketType,jdbcType=BIT},
            </if>
            <if test="scale != null">
                `scale` = #{scale,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                `enable` = #{enable,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.peaq.ec3.shopp.model.CoinInfo">
    update coin_info
    set currency = #{currency,jdbcType=VARCHAR},
      currency_full_name = #{currencyFullName,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      company_url = #{companyUrl,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      market_type = #{marketType,jdbcType=BIT},
      `scale` = #{scale,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="list" resultMap="BaseResultMap">
      SELECT
          `id`,
          `currency`,
          `currency_full_name`,
          `price`,
          `icon`,
          `company`,
          `company_url`,
          `sort`,
          `market_type`,
          `scale`,
          `enable`,
          `create_time`,
          `update_time`
        FROM
          `ec^3`.`coin_info`  where   `enable` = 0 order by `create_time` desc
  </select>
</mapper>